#include <stdio.h>
#include <string.h>
#include <math.h>


struct Tocka {
    int x, y;
};

struct Trokut {
    struct Tocka a, b, c;
};

void unesiTocke(struct Tocka tocke[], int n) {
    for (int i = 0; i < n; i++) {
        scanf("%d %d", &tocke[i].x, &tocke[i].y);
    }
}

void unesiTrokute(struct Trokut trokuti[], int m) {
    for (int i = 0; i < m; i++) {
        scanf("%d %d %d %d %d %d", 
              &trokuti[i].a.x, &trokuti[i].a.y, 
              &trokuti[i].b.x, &trokuti[i].b.y, 
              &trokuti[i].c.x, &trokuti[i].c.y);
    }
}

double udaljenost(struct Tocka p1, struct Tocka p2) {
    return sqrt(pow(p1.x - p2.x, 2) + pow(p1.y - p2.y, 2));
}

double pronadjiNajveciOpseg(struct Trokut trokuti[], int m) {
    double maxOpseg = 0;
    for (int i = 0; i < m; i++) {
        double opseg = udaljenost(trokuti[i].a, trokuti[i].b) +
                       udaljenost(trokuti[i].b, trokuti[i].c) +
                       udaljenost(trokuti[i].c, trokuti[i].a);
        if (opseg > maxOpseg) {
            maxOpseg = opseg;
        }
    }
    return maxOpseg;
}

int main() {
    int n, m;
    scanf("%d %d", &n, &m);
    struct Tocka tocke[n];
    struct Trokut trokuti[m];
    
    unesiTocke(tocke, n);
    unesiTrokute(trokuti, m);
    
    printf("%.2lf\n", pronadjiNajveciOpseg(trokuti, m));
    
    return 0;
}
